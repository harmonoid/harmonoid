name: Harmonoid
on:
  push:
    branches:
      - master

jobs:
  build_windows:
    name: Harmonoid Windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          channel: "beta"

      - run: flutter config --enable-windows-desktop
      - run: flutter pub get
      - run: flutter build windows

      - name: Create PFX
        id: create_pfx
        uses: timheuer/base64-to-file@v1
        with:
          fileName: "certificate.pfx"
          encodedString: ${{ secrets.CERTIFICATE }}

      - run: |
          "%programfiles(x86)%\Windows Kits\10\App Certification Kit\signtool.exe" sign /tr http://timestamp.digicert.com /td sha256 /fd sha256 /f "${{ steps.create_pfx.outputs.filePath }}" /p ${{ secrets.PASSWORD }} "build/windows/runner/Release/harmonoid.exe"
        shell: cmd
      - run: cp -r build/windows/runner/Release harmonoid-windows-exe
      - run: tar.exe -a -c -f harmonoid-windows-exe.zip harmonoid-windows-exe

      - run: |
          "%programfiles(x86)%\Inno Setup 6\iscc.exe" "Harmonoid_InnoSetup.iss"
        shell: cmd
      - run: |
          "%programfiles(x86)%\Windows Kits\10\App Certification Kit\signtool.exe" sign /tr http://timestamp.digicert.com /td sha256 /fd sha256 /f "${{ steps.create_pfx.outputs.filePath }}" /p ${{ secrets.PASSWORD }} "Output/harmonoid-windows-setup.exe"
        shell: cmd
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: false
          body: ""
          tag_name: "vnext"
          files: |
            Output/harmonoid-windows-setup.exe
            harmonoid-windows-exe.zip
          token: ${{ secrets.GITHUB_TOKEN }}

  build_linux:
    name: Harmonoid Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: "beta"
      - run: sudo apt-get update
      - run: sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev libwebkit2gtk-4.0-dev libmediainfo-dev dpkg-dev
      - run: flutter config --enable-linux-desktop
      - run: flutter pub get
      - run: flutter build linux --verbose

      - name: Build .deb executable
        run: |
          mkdir linux/debian/usr
          cp -fr build/linux/x64/release/bundle linux/debian/usr/bin
          dpkg-deb --build --root-owner-group linux/debian
          cp linux/*.deb harmonoid-linux-x86_64.deb

      - name: Build Tarball
        run: |
          mkdir -p AppDir/
          cp -r linux/debian/usr AppDir/
          ln -sr AppDir/usr/bin/harmonoid AppDir/harmonoid
          tar czf harmonoid-linux-x86_64.tar.gz -C AppDir/ .

      - name: Build AppImage
        run: |
          echo '#!/bin/sh
          cd "$(dirname "$0")"
          exec ./harmonoid' > AppDir/AppRun
          chmod +x AppDir/AppRun
          ln -sr AppDir/usr/share/icons/hicolor/256x256/apps/harmonoid.png AppDir/harmonoid.png
          cp AppDir/usr/share/applications/harmonoid.desktop AppDir/harmonoid.desktop
          curl -L https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -o appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage
          ARCH=x86_64 ./appimagetool-x86_64.AppImage AppDir/ harmonoid-linux-x86_64.AppImage

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: false
          body: ""
          tag_name: "vnext"
          files: |
            harmonoid-linux-x86_64.deb
            harmonoid-linux-x86_64.tar.gz
            harmonoid-linux-x86_64.AppImage
          token: ${{ secrets.GITHUB_TOKEN }}
